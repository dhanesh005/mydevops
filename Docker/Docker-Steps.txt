-----------------------Docker Installation

sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install docker-ce


 ------------------Interactive Mode
docker run -i -t --name=f21 fedora /bin/bash

--------Forground mode
docker run ubuntu:14.04 /bin/echo 'Hello world'
    
------background mode
docker run -d ubuntu:14.04 /bin/sh -c "while true; do echo hello world; sleep 1; done"

docker exec -it <container_id> /bin/bash --how to attach to a daemon container

https://docs.docker.com/engine/reference/commandline/docker/

docker rm $(docker ps -aq --filter "status=exited")
--------------------------------------------------------------------------------------------

    docker run -i -t fedora /bin/bash
    yum install httpd
     
    docker commit -a "Swami" -m "Fedora with HTTPD package" 1066ae820bcb mk/fedora:httpd
    
    docker run -i -t mk/fedora:httpd
	
------------------------dockerfile--------------------------


--------Docker File Python Flask -------------------------
FROM python:2.7
COPY . /app
WORKDIR /app
RUN pip install -r requirements.txt
EXPOSE 5000
CMD [ "python", "app.py" ]


--------------------app.py---------------------------------
from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello World!"

if __name__ == "__main__":
    app.run()
    
---------------------requirements.txt-----------------
Flask


docker build . -t pythondemo:latest --> For Creating an image of flask demo diretory

docker run --name test-python -d ImageId
docker exec -it container_id /bin/bash


----------------Nginxdemo----------------------------------
ctrl+d 
cd ../..
mkdir nginxdemo
cd nginxdemo
vi Dockerfile

FROM fedora
MAINTAINER scollier <scollier@redhat.com>

RUN yum -y update && yum clean all
RUN yum -y install nginx && yum clean all
RUN echo "daemon off;" >> /etc/nginx/nginx.conf
RUN echo "nginx on Fedora" > /usr/share/nginx/html/index.html

EXPOSE 80

CMD [ "/usr/sbin/nginx" ]
---------------------------------------
docker build . -t customnginx:latest

docker run -d -p 8001 --name test customnginx:latest

docker exec -it container_id /bin/bash

--------------------------------------------------------------

https://docker-k8s-lab.readthedocs.io/en/latest/docker/bridged-network.html
https://dzone.com/articles/dockerizing-jenkins-2-setup-and-using-it-along-wit

docker network create -d bridge my-bridge

docker network ls

docker network create -d bridge my-bridge

docker network ls

docker inspect --format '{{.NetworkSettings.IPAddress}}' <container_id>

apt install bridge-utils
brctl show

docker run -d --name test1 --network my-bridge busybox sh -c "while true;do sleep 3600;done"

---------------------Docker Jenkins----------------------------


---- dockerfile -----
FROM jenkins


docker build . -t myjenkins:latest
docker run -d -p 8080:8080 --name myjenkins myjenkins:latest
docker exec -it <container id> /bin/bash

refer : https://dzone.com/articles/dockerizing-jenkins-2-setup-and-using-it-along-wit

------------------------------------------------------------------------------


